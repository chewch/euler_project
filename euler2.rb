require_relative 'euler_requires'

# Fibonacci even #
# Each new term in the Fibonacci sequence is generated by adding
# the previous two terms. By starting with 1 and 2, the first 10
# terms will be:
#     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values
# do not exceed four million, find the sum of the even-valued terms.
def euler2
  fibs = [1, 2]
  sum = 2
  fn = 0

  while fn < 4000000

    fn = fibs[fibs.length-1] + fibs[fibs.length-2]
    fibs.push(fn)

    if fn % 2 == 0
      sum = sum + fn
    end

  end

end
euler2

# with a little recursion..
# def fib (num1, num2)
#   return num1 + num2
# end

# def re_fib
#   fibs = [1,2]
#   sum = 2
#   for i in 1..100
#     fn = fib(fibs.length-1, fibs.length-2)
#     fibs.push(fn)
#     if fn % 2 == 0
#       sum = sum + fn
#     end
#   end
#   p sum
# end
# re_fib
